<?xml version="1.0"?>
<ruleset name="WordPress Coding Standards based custom ruleset for your plugin">
	<description>Generally-applicable sniffs for WordPress plugins.</description>

	<!-- What to scan -->
	<file>.</file>
	<exclude-pattern>/vendor/</exclude-pattern>
	<exclude-pattern>/lib/</exclude-pattern>
	<exclude-pattern>/wp/</exclude-pattern>


	<!-- How to scan -->
	<!-- Usage instructions: https://github.com/squizlabs/PHP_CodeSniffer/wiki/Usage -->
	<!-- Annotated ruleset: https://github.com/squizlabs/PHP_CodeSniffer/wiki/Annotated-ruleset.xml -->
	<arg value="sp"/> <!-- Show sniff and progress -->
	<arg name="basepath" value="./"/><!-- Strip the file paths down to the relevant bit -->
	<arg name="colors"/>
	<arg name="extensions" value="php"/>
	<arg name="parallel" value="8"/><!-- Enables parallel processing when available for faster results. -->
<!-- 
<config name="installed_paths" value="C:\\Users\\carsten\\Documents\\hub\\SETTINGS\\WordPress-Coding-Standards" />

phpcs -_-config-set installed_paths "C:\\Users\\carsten\\Documents\\hub\\SETTINGS\\WordPress-Coding-Standards" -->

	<!-- Rules: Check PHP version compatibility -->
	<!-- https://github.com/PHPCompatibility/PHPCompatibility#sniffing-your-code-for-compatibility-with-specific-php-versions -->
	<!-- https://github.com/PHPCompatibility/PHPCompatibilityWP -->
    <!-- <config name="testVersion" value="8.0-"/> -->
	<!-- <rule ref="PHPCompatibilityWP"> -->
	<!-- </rule> -->
	<!-- <rule ref="PHPCompatibility"/> -->
		  


	<!-- Add in some extra rules from other standards. -->
	<rule ref="Generic.CodeAnalysis.UnusedFunctionParameter"/>
	<rule ref="Generic.Commenting.Todo"/>

	<!-- Rules: WordPress Coding Standards -->
	<!-- https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards -->
	<!-- https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/wiki/Customizable-sniff-properties -->
	<config name="minimum_supported_wp_version" value="5.9"/>

	<!-- <rule ref="WordPress-Core"/>  -->
	
	<!-- Rules: Extra includes: WordPress Core + some Extra -->
	<rule ref="WordPress-Extra"/>
	<!-- Rules: WordPress Inline Documentation Standards -->
	<rule ref="WordPress-Docs"/>


	<!-- Rules: Cognitive Complexity metric by SonarSource -->
	<!-- https://github.com/Rarst/phpcs-cognitive-complexity -->
	<rule ref="CognitiveComplexity"/>



	<!-- Rules: WordPress VIP Go, for WordPress.com VIP - see
	https://github.com/Automattic/VIP-Coding-Standards -->
	<rule ref="WordPress-VIP-Go"/>



	<!--
	#############################################################################
	Handbook: PHP - Indentation.
	Ref: https://make.wordpress.org/core/handbook/best-practices/coding-standards/php/#indentation
	#############################################################################
	-->
	<!-- Covers rule: Your indentation should always reflect logical structure. -->
		<!-- 	<config name="exact" value="true"/>
			<config name="indent" value="4"/>
			<config name="tabIndent" value="true"/>
 -->
	<rule ref="Generic.WhiteSpace.ScopeIndent">
		<properties>
			<property name="exact" value="true"/>
			<property name="indent" value="4"/>
			<property name="tabIndent" value="true"/>
			<property name="ignoreIndentationTokens" type="array">
				<element value="T_HEREDOC"/>
				<element value="T_NOWDOC"/>
				<element value="T_INLINE_HTML"/>
			</property>
		</properties>
		<exclude name="Generic.WhiteSpace.ScopeIndent.IncorrectExact"/>
	</rule>

	<!-- Covers rule: Use real tabs and not spaces. -->
	<!-- THIS WAS TRIGGERING AN ERROR FOR LONG -->
	<!-- BUT NOT ANYMORE; DONT KNOW ... NO NEED FOR EXCLUSION -->
	<!--
 	<rule ref="WordPress.WhiteSpace.PrecisionAlignment">
		<exclude name="WordPress.WhiteSpace.PrecisionAlignment.Found"/>
	</rule> -->


	<!--
	#############################################################################
	Handbook: PHP - Remove Trailing Spaces.
	Ref: https://make.wordpress.org/core/handbook/best-practices/coding-standards/php/#remove-trailing-spaces
	#############################################################################
	-->
	<!-- Covers rule: Remove trailing whitespace at the end of each line of code. -->
	<!-- THIS IS A REALLY ANOYING RULE, BECAUSE IT GETS TRIGGERED  -->
	<!-- ON EVERY EMPTY LINE IN EACH DOCBLOCK ... KEEP IT ! -->
	<rule ref="Squiz.WhiteSpace.SuperfluousWhitespace">
		<exclude name="Squiz.WhiteSpace.SuperfluousWhitespace.EndLine"/>
	</rule>

<!-- Covers rule: Put spaces on both sides of the opening and closing parenthesis of
	 if, elseif, foreach, for, and switch blocks. -->
	<rule ref="WordPress.WhiteSpace">
		<exclude name="WordPress.WhiteSpace.ControlStructureSpacing"/>
	</rule>
























			<!-- <config name="blank_line_check" value="false"/> 
	<rule ref="WordPress.WhiteSpace.ControlStructureSpacing">
		<properties>
			<property name="blank_line_check" value="false"/>
		</properties>
	</rule>-->

	<!-- <config name="strict_class_file_names" value="false"/> -->
	<rule ref="WordPress.Files.FileName">
		<exclude name="WordPress.Files.FileName.InvalidClassFileName"/>
		<exclude name="WordPress.Files.FileName.NotHyphenatedLowercase"/>

		<!-- <properties>
			<property name="strict_class_file_names" value="false"/>
		</properties> -->
	</rule>



		<config name="prefixes" type="array">
			<element value="figurentheater"/>
			<element value="ft"/>
		</config>

		<config name="text_domain" value="figurentheater"/>

	<!-- WordPress insists on long array syntax, so let's ignore that, and insist on short array syntax. -->
	<rule ref="WordPress">
	
		<config name="text_domain" type="array">
					<element value="figurentheater"/>
				</config>
	<!-- 	<rule ref="WordPress.WP.I18n">
	 		<properties>
				<property name="text_domain" type="array">
					<element value="figurentheater"/>
				</property>
			</properties>

		</rule> -->


		 <properties>
			<property name="prefixes" type="array">
				<element value="figurentheater"/>
				<element value="ft"/>
			</property>
		</properties>

		<exclude name="WordPress.NamingConventions.PrefixAllGlobals"/>

		<exclude name="Generic.Arrays.DisallowShortArraySyntax"/>
	</rule>
	<rule ref="Generic.Arrays.DisallowLongArraySyntax"/>




	<!-- Inline comments must end in full-stops, exclamation marks, or question marks -->
	<!-- NOPE, I hate it -->
	<rule ref="Squiz.Commenting.InlineComment">
		<exclude name="Squiz.Commenting.InlineComment.InvalidEndChar"/>
	</rule>

	<!-- Inline control â€‹structures are not allowed -->
	<!-- AND, I hate it, too -->	
	<rule ref="Generic.ControlStructures.InlineControlStructure">
		<exclude name="Generic.ControlStructures.InlineControlStructure.NotAllowed"/>
	</rule>
</ruleset>
